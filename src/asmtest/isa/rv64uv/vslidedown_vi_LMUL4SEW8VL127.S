
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# isa/rv64uv/vslidedown_vi_LMUL4SEW8VL127.S
#-----------------------------------------------------------------------------
#
# Test vslidedown.vi instructions.
# With LMUL=4, SEW=8, VL=127
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN

  la a1, tdat
  la a3, sres
  lbu a4, 0(a1)
  li a5, 1
  lbu a5, 1(a1)
  sb a5, 0(a3)
  lbu a4, 1(a1)
  li a5, 1
  lbu a5, 2(a1)
  sb a5, 1(a3)
  lbu a4, 2(a1)
  li a5, 1
  lbu a5, 3(a1)
  sb a5, 2(a3)
  lbu a4, 3(a1)
  li a5, 1
  lbu a5, 4(a1)
  sb a5, 3(a3)
  lbu a4, 4(a1)
  li a5, 1
  lbu a5, 5(a1)
  sb a5, 4(a3)
  lbu a4, 5(a1)
  li a5, 1
  lbu a5, 6(a1)
  sb a5, 5(a3)
  lbu a4, 6(a1)
  li a5, 1
  lbu a5, 7(a1)
  sb a5, 6(a3)
  lbu a4, 7(a1)
  li a5, 1
  lbu a5, 8(a1)
  sb a5, 7(a3)
  lbu a4, 8(a1)
  li a5, 1
  lbu a5, 9(a1)
  sb a5, 8(a3)
  lbu a4, 9(a1)
  li a5, 1
  lbu a5, 10(a1)
  sb a5, 9(a3)
  lbu a4, 10(a1)
  li a5, 1
  lbu a5, 11(a1)
  sb a5, 10(a3)
  lbu a4, 11(a1)
  li a5, 1
  lbu a5, 12(a1)
  sb a5, 11(a3)
  lbu a4, 12(a1)
  li a5, 1
  lbu a5, 13(a1)
  sb a5, 12(a3)
  lbu a4, 13(a1)
  li a5, 1
  lbu a5, 14(a1)
  sb a5, 13(a3)
  lbu a4, 14(a1)
  li a5, 1
  lbu a5, 15(a1)
  sb a5, 14(a3)
  lbu a4, 15(a1)
  li a5, 1
  lbu a5, 16(a1)
  sb a5, 15(a3)
  lbu a4, 16(a1)
  li a5, 1
  lbu a5, 17(a1)
  sb a5, 16(a3)
  lbu a4, 17(a1)
  li a5, 1
  lbu a5, 18(a1)
  sb a5, 17(a3)
  lbu a4, 18(a1)
  li a5, 1
  lbu a5, 19(a1)
  sb a5, 18(a3)
  lbu a4, 19(a1)
  li a5, 1
  lbu a5, 20(a1)
  sb a5, 19(a3)
  lbu a4, 20(a1)
  li a5, 1
  lbu a5, 21(a1)
  sb a5, 20(a3)
  lbu a4, 21(a1)
  li a5, 1
  lbu a5, 22(a1)
  sb a5, 21(a3)
  lbu a4, 22(a1)
  li a5, 1
  lbu a5, 23(a1)
  sb a5, 22(a3)
  lbu a4, 23(a1)
  li a5, 1
  lbu a5, 24(a1)
  sb a5, 23(a3)
  lbu a4, 24(a1)
  li a5, 1
  lbu a5, 25(a1)
  sb a5, 24(a3)
  lbu a4, 25(a1)
  li a5, 1
  lbu a5, 26(a1)
  sb a5, 25(a3)
  lbu a4, 26(a1)
  li a5, 1
  lbu a5, 27(a1)
  sb a5, 26(a3)
  lbu a4, 27(a1)
  li a5, 1
  lbu a5, 28(a1)
  sb a5, 27(a3)
  lbu a4, 28(a1)
  li a5, 1
  lbu a5, 29(a1)
  sb a5, 28(a3)
  lbu a4, 29(a1)
  li a5, 1
  lbu a5, 30(a1)
  sb a5, 29(a3)
  lbu a4, 30(a1)
  li a5, 1
  lbu a5, 31(a1)
  sb a5, 30(a3)
  lbu a4, 31(a1)
  li a5, 1
  lbu a5, 32(a1)
  sb a5, 31(a3)
  lbu a4, 32(a1)
  li a5, 1
  lbu a5, 33(a1)
  sb a5, 32(a3)
  lbu a4, 33(a1)
  li a5, 1
  lbu a5, 34(a1)
  sb a5, 33(a3)
  lbu a4, 34(a1)
  li a5, 1
  lbu a5, 35(a1)
  sb a5, 34(a3)
  lbu a4, 35(a1)
  li a5, 1
  lbu a5, 36(a1)
  sb a5, 35(a3)
  lbu a4, 36(a1)
  li a5, 1
  lbu a5, 37(a1)
  sb a5, 36(a3)
  lbu a4, 37(a1)
  li a5, 1
  lbu a5, 38(a1)
  sb a5, 37(a3)
  lbu a4, 38(a1)
  li a5, 1
  lbu a5, 39(a1)
  sb a5, 38(a3)
  lbu a4, 39(a1)
  li a5, 1
  lbu a5, 40(a1)
  sb a5, 39(a3)
  lbu a4, 40(a1)
  li a5, 1
  lbu a5, 41(a1)
  sb a5, 40(a3)
  lbu a4, 41(a1)
  li a5, 1
  lbu a5, 42(a1)
  sb a5, 41(a3)
  lbu a4, 42(a1)
  li a5, 1
  lbu a5, 43(a1)
  sb a5, 42(a3)
  lbu a4, 43(a1)
  li a5, 1
  lbu a5, 44(a1)
  sb a5, 43(a3)
  lbu a4, 44(a1)
  li a5, 1
  lbu a5, 45(a1)
  sb a5, 44(a3)
  lbu a4, 45(a1)
  li a5, 1
  lbu a5, 46(a1)
  sb a5, 45(a3)
  lbu a4, 46(a1)
  li a5, 1
  lbu a5, 47(a1)
  sb a5, 46(a3)
  lbu a4, 47(a1)
  li a5, 1
  lbu a5, 48(a1)
  sb a5, 47(a3)
  lbu a4, 48(a1)
  li a5, 1
  lbu a5, 49(a1)
  sb a5, 48(a3)
  lbu a4, 49(a1)
  li a5, 1
  lbu a5, 50(a1)
  sb a5, 49(a3)
  lbu a4, 50(a1)
  li a5, 1
  lbu a5, 51(a1)
  sb a5, 50(a3)
  lbu a4, 51(a1)
  li a5, 1
  lbu a5, 52(a1)
  sb a5, 51(a3)
  lbu a4, 52(a1)
  li a5, 1
  lbu a5, 53(a1)
  sb a5, 52(a3)
  lbu a4, 53(a1)
  li a5, 1
  lbu a5, 54(a1)
  sb a5, 53(a3)
  lbu a4, 54(a1)
  li a5, 1
  lbu a5, 55(a1)
  sb a5, 54(a3)
  lbu a4, 55(a1)
  li a5, 1
  lbu a5, 56(a1)
  sb a5, 55(a3)
  lbu a4, 56(a1)
  li a5, 1
  lbu a5, 57(a1)
  sb a5, 56(a3)
  lbu a4, 57(a1)
  li a5, 1
  lbu a5, 58(a1)
  sb a5, 57(a3)
  lbu a4, 58(a1)
  li a5, 1
  lbu a5, 59(a1)
  sb a5, 58(a3)
  lbu a4, 59(a1)
  li a5, 1
  lbu a5, 60(a1)
  sb a5, 59(a3)
  lbu a4, 60(a1)
  li a5, 1
  lbu a5, 61(a1)
  sb a5, 60(a3)
  lbu a4, 61(a1)
  li a5, 1
  lbu a5, 62(a1)
  sb a5, 61(a3)
  lbu a4, 62(a1)
  li a5, 1
  lbu a5, 63(a1)
  sb a5, 62(a3)
  lbu a4, 63(a1)
  li a5, 1
  lbu a5, 64(a1)
  sb a5, 63(a3)
  lbu a4, 64(a1)
  li a5, 1
  lbu a5, 65(a1)
  sb a5, 64(a3)
  lbu a4, 65(a1)
  li a5, 1
  lbu a5, 66(a1)
  sb a5, 65(a3)
  lbu a4, 66(a1)
  li a5, 1
  lbu a5, 67(a1)
  sb a5, 66(a3)
  lbu a4, 67(a1)
  li a5, 1
  lbu a5, 68(a1)
  sb a5, 67(a3)
  lbu a4, 68(a1)
  li a5, 1
  lbu a5, 69(a1)
  sb a5, 68(a3)
  lbu a4, 69(a1)
  li a5, 1
  lbu a5, 70(a1)
  sb a5, 69(a3)
  lbu a4, 70(a1)
  li a5, 1
  lbu a5, 71(a1)
  sb a5, 70(a3)
  lbu a4, 71(a1)
  li a5, 1
  lbu a5, 72(a1)
  sb a5, 71(a3)
  lbu a4, 72(a1)
  li a5, 1
  lbu a5, 73(a1)
  sb a5, 72(a3)
  lbu a4, 73(a1)
  li a5, 1
  lbu a5, 74(a1)
  sb a5, 73(a3)
  lbu a4, 74(a1)
  li a5, 1
  lbu a5, 75(a1)
  sb a5, 74(a3)
  lbu a4, 75(a1)
  li a5, 1
  lbu a5, 76(a1)
  sb a5, 75(a3)
  lbu a4, 76(a1)
  li a5, 1
  lbu a5, 77(a1)
  sb a5, 76(a3)
  lbu a4, 77(a1)
  li a5, 1
  lbu a5, 78(a1)
  sb a5, 77(a3)
  lbu a4, 78(a1)
  li a5, 1
  lbu a5, 79(a1)
  sb a5, 78(a3)
  lbu a4, 79(a1)
  li a5, 1
  lbu a5, 80(a1)
  sb a5, 79(a3)
  lbu a4, 80(a1)
  li a5, 1
  lbu a5, 81(a1)
  sb a5, 80(a3)
  lbu a4, 81(a1)
  li a5, 1
  lbu a5, 82(a1)
  sb a5, 81(a3)
  lbu a4, 82(a1)
  li a5, 1
  lbu a5, 83(a1)
  sb a5, 82(a3)
  lbu a4, 83(a1)
  li a5, 1
  lbu a5, 84(a1)
  sb a5, 83(a3)
  lbu a4, 84(a1)
  li a5, 1
  lbu a5, 85(a1)
  sb a5, 84(a3)
  lbu a4, 85(a1)
  li a5, 1
  lbu a5, 86(a1)
  sb a5, 85(a3)
  lbu a4, 86(a1)
  li a5, 1
  lbu a5, 87(a1)
  sb a5, 86(a3)
  lbu a4, 87(a1)
  li a5, 1
  lbu a5, 88(a1)
  sb a5, 87(a3)
  lbu a4, 88(a1)
  li a5, 1
  lbu a5, 89(a1)
  sb a5, 88(a3)
  lbu a4, 89(a1)
  li a5, 1
  lbu a5, 90(a1)
  sb a5, 89(a3)
  lbu a4, 90(a1)
  li a5, 1
  lbu a5, 91(a1)
  sb a5, 90(a3)
  lbu a4, 91(a1)
  li a5, 1
  lbu a5, 92(a1)
  sb a5, 91(a3)
  lbu a4, 92(a1)
  li a5, 1
  lbu a5, 93(a1)
  sb a5, 92(a3)
  lbu a4, 93(a1)
  li a5, 1
  lbu a5, 94(a1)
  sb a5, 93(a3)
  lbu a4, 94(a1)
  li a5, 1
  lbu a5, 95(a1)
  sb a5, 94(a3)
  lbu a4, 95(a1)
  li a5, 1
  lbu a5, 96(a1)
  sb a5, 95(a3)
  lbu a4, 96(a1)
  li a5, 1
  lbu a5, 97(a1)
  sb a5, 96(a3)
  lbu a4, 97(a1)
  li a5, 1
  lbu a5, 98(a1)
  sb a5, 97(a3)
  lbu a4, 98(a1)
  li a5, 1
  lbu a5, 99(a1)
  sb a5, 98(a3)
  lbu a4, 99(a1)
  li a5, 1
  lbu a5, 100(a1)
  sb a5, 99(a3)
  lbu a4, 100(a1)
  li a5, 1
  lbu a5, 101(a1)
  sb a5, 100(a3)
  lbu a4, 101(a1)
  li a5, 1
  lbu a5, 102(a1)
  sb a5, 101(a3)
  lbu a4, 102(a1)
  li a5, 1
  lbu a5, 103(a1)
  sb a5, 102(a3)
  lbu a4, 103(a1)
  li a5, 1
  lbu a5, 104(a1)
  sb a5, 103(a3)
  lbu a4, 104(a1)
  li a5, 1
  lbu a5, 105(a1)
  sb a5, 104(a3)
  lbu a4, 105(a1)
  li a5, 1
  lbu a5, 106(a1)
  sb a5, 105(a3)
  lbu a4, 106(a1)
  li a5, 1
  lbu a5, 107(a1)
  sb a5, 106(a3)
  lbu a4, 107(a1)
  li a5, 1
  lbu a5, 108(a1)
  sb a5, 107(a3)
  lbu a4, 108(a1)
  li a5, 1
  lbu a5, 109(a1)
  sb a5, 108(a3)
  lbu a4, 109(a1)
  li a5, 1
  lbu a5, 110(a1)
  sb a5, 109(a3)
  lbu a4, 110(a1)
  li a5, 1
  lbu a5, 111(a1)
  sb a5, 110(a3)
  lbu a4, 111(a1)
  li a5, 1
  lbu a5, 112(a1)
  sb a5, 111(a3)
  lbu a4, 112(a1)
  li a5, 1
  lbu a5, 113(a1)
  sb a5, 112(a3)
  lbu a4, 113(a1)
  li a5, 1
  lbu a5, 114(a1)
  sb a5, 113(a3)
  lbu a4, 114(a1)
  li a5, 1
  lbu a5, 115(a1)
  sb a5, 114(a3)
  lbu a4, 115(a1)
  li a5, 1
  lbu a5, 116(a1)
  sb a5, 115(a3)
  lbu a4, 116(a1)
  li a5, 1
  lbu a5, 117(a1)
  sb a5, 116(a3)
  lbu a4, 117(a1)
  li a5, 1
  lbu a5, 118(a1)
  sb a5, 117(a3)
  lbu a4, 118(a1)
  li a5, 1
  lbu a5, 119(a1)
  sb a5, 118(a3)
  lbu a4, 119(a1)
  li a5, 1
  lbu a5, 120(a1)
  sb a5, 119(a3)
  lbu a4, 120(a1)
  li a5, 1
  lbu a5, 121(a1)
  sb a5, 120(a3)
  lbu a4, 121(a1)
  li a5, 1
  lbu a5, 122(a1)
  sb a5, 121(a3)
  lbu a4, 122(a1)
  li a5, 1
  lbu a5, 123(a1)
  sb a5, 122(a3)
  lbu a4, 123(a1)
  li a5, 1
  lbu a5, 124(a1)
  sb a5, 123(a3)
  lbu a4, 124(a1)
  li a5, 1
  lbu a5, 125(a1)
  sb a5, 124(a3)
  lbu a4, 125(a1)
  li a5, 1
  lbu a5, 126(a1)
  sb a5, 125(a3)
  lbu a4, 126(a1)
  li a5, 1
  lbu a5, 127(a1)
  sb a5, 126(a3)


  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, 127
  vsetvli t1, t0, e8,m4,ta,ma
  vslidedown.vi v4, v8, 1

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(3, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(4, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(5, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(6, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(7, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(8, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(9, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(10, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(11, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(12, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(13, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(14, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(15, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(16, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(17, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 127
  vsetvli t1, t0, e8,m4,ta,ma
  vslidedown.vi v4, v8, 1, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(18, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(19, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(20, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(21, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(22, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(23, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(24, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(25, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(26, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(27, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(28, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(29, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(30, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(31, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(32, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(33, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(34, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(35, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(36, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(37, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(38, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(39, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(40, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(41, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(42, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(43, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(44, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(45, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(46, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(47, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(48, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(49, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(50, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(51, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(52, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(53, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(54, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(55, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(56, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(57, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(58, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(59, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(60, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(61, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(62, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(63, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(64, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(65, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(66, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(67, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(68, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(69, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(70, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(71, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(72, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(73, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(74, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(75, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(76, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(77, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(78, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(79, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(80, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(81, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, 127
  vsetvli t1, t0, e8,m4,tu,ma
  vslidedown.vi v4, v8, 1

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(82, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(83, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(84, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(85, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(86, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(87, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(88, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(89, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(90, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(91, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(92, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(93, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(94, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(95, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(96, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 127
  vsetvli t1, t0, e8,m4,ta,ma
  vslidedown.vi v4, v8, 1, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(97, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(98, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(99, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(100, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(101, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(102, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(103, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(104, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(105, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(106, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(107, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(108, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(109, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(110, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(111, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(112, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(113, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(114, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(115, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(116, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(117, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(118, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(119, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(120, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(121, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(122, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(123, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(124, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(125, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(126, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(127, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(128, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(129, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(130, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(131, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(132, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(133, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(134, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(135, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(136, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(137, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(138, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(139, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(140, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(141, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(142, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(143, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(144, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(145, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(146, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(147, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(148, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(149, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(150, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(151, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(152, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(153, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(154, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(155, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(156, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(157, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(158, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(159, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(160, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(161, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(162, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(163, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(164, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(165, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(166, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(167, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(168, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(169, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(170, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(171, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(172, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(173, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(174, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(175, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(176, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(177, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(178, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(179, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(180, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(181, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(182, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(183, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(184, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(185, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(186, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(187, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(188, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(189, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(190, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(191, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(192, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(193, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(194, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(195, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(196, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(197, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(198, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(199, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(200, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(201, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(202, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(203, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(204, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(205, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(206, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(207, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(208, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(209, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(210, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(211, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(212, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(213, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(214, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(215, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(216, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(217, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(218, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(219, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(220, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(221, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(222, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(223, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)

  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 136

sres:
  .zero 136

tdat:
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END

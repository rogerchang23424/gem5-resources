
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# isa/rv64uv/vsaddu_vv_LMUL2SEW8VL32.S
#-----------------------------------------------------------------------------
#
# Test vsaddu.vv instructions.
# With LMUL=2, SEW=8, VL=32
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN

  la a1, tdat
  la a3, sres
  la a2, tdat+8
  lbu a4, 0(a1)
  lbu a5, 0(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL1
  li a5, -1
.ASL1:
  sb a5, 0(a3)
  lbu a4, 1(a1)
  lbu a5, 1(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL2
  li a5, -1
.ASL2:
  sb a5, 1(a3)
  lbu a4, 2(a1)
  lbu a5, 2(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL3
  li a5, -1
.ASL3:
  sb a5, 2(a3)
  lbu a4, 3(a1)
  lbu a5, 3(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL4
  li a5, -1
.ASL4:
  sb a5, 3(a3)
  lbu a4, 4(a1)
  lbu a5, 4(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL5
  li a5, -1
.ASL5:
  sb a5, 4(a3)
  lbu a4, 5(a1)
  lbu a5, 5(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL6
  li a5, -1
.ASL6:
  sb a5, 5(a3)
  lbu a4, 6(a1)
  lbu a5, 6(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL7
  li a5, -1
.ASL7:
  sb a5, 6(a3)
  lbu a4, 7(a1)
  lbu a5, 7(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL8
  li a5, -1
.ASL8:
  sb a5, 7(a3)
  lbu a4, 8(a1)
  lbu a5, 8(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL9
  li a5, -1
.ASL9:
  sb a5, 8(a3)
  lbu a4, 9(a1)
  lbu a5, 9(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL10
  li a5, -1
.ASL10:
  sb a5, 9(a3)
  lbu a4, 10(a1)
  lbu a5, 10(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL11
  li a5, -1
.ASL11:
  sb a5, 10(a3)
  lbu a4, 11(a1)
  lbu a5, 11(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL12
  li a5, -1
.ASL12:
  sb a5, 11(a3)
  lbu a4, 12(a1)
  lbu a5, 12(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL13
  li a5, -1
.ASL13:
  sb a5, 12(a3)
  lbu a4, 13(a1)
  lbu a5, 13(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL14
  li a5, -1
.ASL14:
  sb a5, 13(a3)
  lbu a4, 14(a1)
  lbu a5, 14(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL15
  li a5, -1
.ASL15:
  sb a5, 14(a3)
  lbu a4, 15(a1)
  lbu a5, 15(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL16
  li a5, -1
.ASL16:
  sb a5, 15(a3)
  lbu a4, 16(a1)
  lbu a5, 16(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL17
  li a5, -1
.ASL17:
  sb a5, 16(a3)
  lbu a4, 17(a1)
  lbu a5, 17(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL18
  li a5, -1
.ASL18:
  sb a5, 17(a3)
  lbu a4, 18(a1)
  lbu a5, 18(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL19
  li a5, -1
.ASL19:
  sb a5, 18(a3)
  lbu a4, 19(a1)
  lbu a5, 19(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL20
  li a5, -1
.ASL20:
  sb a5, 19(a3)
  lbu a4, 20(a1)
  lbu a5, 20(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL21
  li a5, -1
.ASL21:
  sb a5, 20(a3)
  lbu a4, 21(a1)
  lbu a5, 21(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL22
  li a5, -1
.ASL22:
  sb a5, 21(a3)
  lbu a4, 22(a1)
  lbu a5, 22(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL23
  li a5, -1
.ASL23:
  sb a5, 22(a3)
  lbu a4, 23(a1)
  lbu a5, 23(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL24
  li a5, -1
.ASL24:
  sb a5, 23(a3)
  lbu a4, 24(a1)
  lbu a5, 24(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL25
  li a5, -1
.ASL25:
  sb a5, 24(a3)
  lbu a4, 25(a1)
  lbu a5, 25(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL26
  li a5, -1
.ASL26:
  sb a5, 25(a3)
  lbu a4, 26(a1)
  lbu a5, 26(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL27
  li a5, -1
.ASL27:
  sb a5, 26(a3)
  lbu a4, 27(a1)
  lbu a5, 27(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL28
  li a5, -1
.ASL28:
  sb a5, 27(a3)
  lbu a4, 28(a1)
  lbu a5, 28(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL29
  li a5, -1
.ASL29:
  sb a5, 28(a3)
  lbu a4, 29(a1)
  lbu a5, 29(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL30
  li a5, -1
.ASL30:
  sb a5, 29(a3)
  lbu a4, 30(a1)
  lbu a5, 30(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL31
  li a5, -1
.ASL31:
  sb a5, 30(a3)
  lbu a4, 31(a1)
  lbu a5, 31(a2)
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL32
  li a5, -1
.ASL32:
  sb a5, 31(a3)


  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a2, tdat
  vle8.v v4, (a2)
  vle8.v v2, (a2)
  la a2, tdat+8
  vle8.v v6, (a2)

  
  li t0, 32
  vsetvli t1, t0, e8,m2,ta,ma
  vsaddu.vv v2, v4, v6

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a1, res
  vse8.v v2, (a1)
  la a2, sres

  TEST_CASE_REG(3, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(4, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(5, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(6, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a2, tdat
  vle8.v v4, (a2)
  vle8.v v2, (a2)
  la a2, tdat+8
  vle8.v v6, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 32
  vsetvli t1, t0, e8,m2,ta,ma
  vsaddu.vv v2, v4, v6, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a1, res
  vse8.v v2, (a1)
  la a2, sres

  TEST_CASE_REG(7, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(8, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(9, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(10, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(11, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(12, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(13, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(14, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(15, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(16, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(17, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(18, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(19, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(20, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(21, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(22, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a2, tdat
  vle8.v v4, (a2)
  vle8.v v2, (a2)
  la a2, tdat+8
  vle8.v v6, (a2)

  
  li t0, 32
  vsetvli t1, t0, e8,m2,tu,ma
  vsaddu.vv v2, v4, v6

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a1, res
  vse8.v v2, (a1)
  la a2, sres

  TEST_CASE_REG(23, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(24, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(25, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(26, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a2, tdat
  vle8.v v4, (a2)
  vle8.v v2, (a2)
  la a2, tdat+8
  vle8.v v6, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 32
  vsetvli t1, t0, e8,m2,ta,ma
  vsaddu.vv v2, v4, v6, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m2,ta,ma
  la a1, res
  vse8.v v2, (a1)
  la a2, sres

  TEST_CASE_REG(27, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(28, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(29, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(30, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(31, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(32, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(33, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(34, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(35, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(36, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(37, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(38, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(39, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(40, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(41, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(42, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(43, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(44, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(45, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(46, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(47, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(48, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(49, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(50, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(51, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(52, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(53, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(54, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(55, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(56, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(57, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(58, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)

  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 72

sres:
  .zero 72

tdat:
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END

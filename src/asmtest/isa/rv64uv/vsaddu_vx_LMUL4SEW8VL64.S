
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# isa/rv64uv/vsaddu_vx_LMUL4SEW8VL64.S
#-----------------------------------------------------------------------------
#
# Test vsaddu.vx instructions.
# With LMUL=4, SEW=8, VL=64
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN

  la a1, tdat
  la a3, sres
  lbu a4, 0(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL1
  li a5, -1
.ASL1:
  sb a5, 0(a3)
  lbu a4, 1(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL2
  li a5, -1
.ASL2:
  sb a5, 1(a3)
  lbu a4, 2(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL3
  li a5, -1
.ASL3:
  sb a5, 2(a3)
  lbu a4, 3(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL4
  li a5, -1
.ASL4:
  sb a5, 3(a3)
  lbu a4, 4(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL5
  li a5, -1
.ASL5:
  sb a5, 4(a3)
  lbu a4, 5(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL6
  li a5, -1
.ASL6:
  sb a5, 5(a3)
  lbu a4, 6(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL7
  li a5, -1
.ASL7:
  sb a5, 6(a3)
  lbu a4, 7(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL8
  li a5, -1
.ASL8:
  sb a5, 7(a3)
  lbu a4, 8(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL9
  li a5, -1
.ASL9:
  sb a5, 8(a3)
  lbu a4, 9(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL10
  li a5, -1
.ASL10:
  sb a5, 9(a3)
  lbu a4, 10(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL11
  li a5, -1
.ASL11:
  sb a5, 10(a3)
  lbu a4, 11(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL12
  li a5, -1
.ASL12:
  sb a5, 11(a3)
  lbu a4, 12(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL13
  li a5, -1
.ASL13:
  sb a5, 12(a3)
  lbu a4, 13(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL14
  li a5, -1
.ASL14:
  sb a5, 13(a3)
  lbu a4, 14(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL15
  li a5, -1
.ASL15:
  sb a5, 14(a3)
  lbu a4, 15(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL16
  li a5, -1
.ASL16:
  sb a5, 15(a3)
  lbu a4, 16(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL17
  li a5, -1
.ASL17:
  sb a5, 16(a3)
  lbu a4, 17(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL18
  li a5, -1
.ASL18:
  sb a5, 17(a3)
  lbu a4, 18(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL19
  li a5, -1
.ASL19:
  sb a5, 18(a3)
  lbu a4, 19(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL20
  li a5, -1
.ASL20:
  sb a5, 19(a3)
  lbu a4, 20(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL21
  li a5, -1
.ASL21:
  sb a5, 20(a3)
  lbu a4, 21(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL22
  li a5, -1
.ASL22:
  sb a5, 21(a3)
  lbu a4, 22(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL23
  li a5, -1
.ASL23:
  sb a5, 22(a3)
  lbu a4, 23(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL24
  li a5, -1
.ASL24:
  sb a5, 23(a3)
  lbu a4, 24(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL25
  li a5, -1
.ASL25:
  sb a5, 24(a3)
  lbu a4, 25(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL26
  li a5, -1
.ASL26:
  sb a5, 25(a3)
  lbu a4, 26(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL27
  li a5, -1
.ASL27:
  sb a5, 26(a3)
  lbu a4, 27(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL28
  li a5, -1
.ASL28:
  sb a5, 27(a3)
  lbu a4, 28(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL29
  li a5, -1
.ASL29:
  sb a5, 28(a3)
  lbu a4, 29(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL30
  li a5, -1
.ASL30:
  sb a5, 29(a3)
  lbu a4, 30(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL31
  li a5, -1
.ASL31:
  sb a5, 30(a3)
  lbu a4, 31(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL32
  li a5, -1
.ASL32:
  sb a5, 31(a3)
  lbu a4, 32(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL33
  li a5, -1
.ASL33:
  sb a5, 32(a3)
  lbu a4, 33(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL34
  li a5, -1
.ASL34:
  sb a5, 33(a3)
  lbu a4, 34(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL35
  li a5, -1
.ASL35:
  sb a5, 34(a3)
  lbu a4, 35(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL36
  li a5, -1
.ASL36:
  sb a5, 35(a3)
  lbu a4, 36(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL37
  li a5, -1
.ASL37:
  sb a5, 36(a3)
  lbu a4, 37(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL38
  li a5, -1
.ASL38:
  sb a5, 37(a3)
  lbu a4, 38(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL39
  li a5, -1
.ASL39:
  sb a5, 38(a3)
  lbu a4, 39(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL40
  li a5, -1
.ASL40:
  sb a5, 39(a3)
  lbu a4, 40(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL41
  li a5, -1
.ASL41:
  sb a5, 40(a3)
  lbu a4, 41(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL42
  li a5, -1
.ASL42:
  sb a5, 41(a3)
  lbu a4, 42(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL43
  li a5, -1
.ASL43:
  sb a5, 42(a3)
  lbu a4, 43(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL44
  li a5, -1
.ASL44:
  sb a5, 43(a3)
  lbu a4, 44(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL45
  li a5, -1
.ASL45:
  sb a5, 44(a3)
  lbu a4, 45(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL46
  li a5, -1
.ASL46:
  sb a5, 45(a3)
  lbu a4, 46(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL47
  li a5, -1
.ASL47:
  sb a5, 46(a3)
  lbu a4, 47(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL48
  li a5, -1
.ASL48:
  sb a5, 47(a3)
  lbu a4, 48(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL49
  li a5, -1
.ASL49:
  sb a5, 48(a3)
  lbu a4, 49(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL50
  li a5, -1
.ASL50:
  sb a5, 49(a3)
  lbu a4, 50(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL51
  li a5, -1
.ASL51:
  sb a5, 50(a3)
  lbu a4, 51(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL52
  li a5, -1
.ASL52:
  sb a5, 51(a3)
  lbu a4, 52(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL53
  li a5, -1
.ASL53:
  sb a5, 52(a3)
  lbu a4, 53(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL54
  li a5, -1
.ASL54:
  sb a5, 53(a3)
  lbu a4, 54(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL55
  li a5, -1
.ASL55:
  sb a5, 54(a3)
  lbu a4, 55(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL56
  li a5, -1
.ASL56:
  sb a5, 55(a3)
  lbu a4, 56(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL57
  li a5, -1
.ASL57:
  sb a5, 56(a3)
  lbu a4, 57(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL58
  li a5, -1
.ASL58:
  sb a5, 57(a3)
  lbu a4, 58(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL59
  li a5, -1
.ASL59:
  sb a5, 58(a3)
  lbu a4, 59(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL60
  li a5, -1
.ASL60:
  sb a5, 59(a3)
  lbu a4, 60(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL61
  li a5, -1
.ASL61:
  sb a5, 60(a3)
  lbu a4, 61(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL62
  li a5, -1
.ASL62:
  sb a5, 61(a3)
  lbu a4, 62(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL63
  li a5, -1
.ASL63:
  sb a5, 62(a3)
  lbu a4, 63(a1)
  li a5, 1
  add a5, a4, a5
  slli a5, a5, 56
  srli a5, a5, 56
  bgeu a5, a4, .ASL64
  li a5, -1
.ASL64:
  sb a5, 63(a3)


  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, 64
  vsetvli t1, t0, e8,m4,ta,ma
  li t2, 1
  vsaddu.vx v4, v8, t2

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(3, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(4, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(5, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(6, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(7, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(8, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(9, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(10, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 64
  vsetvli t1, t0, e8,m4,ta,ma
  li t2, 1
  vsaddu.vx v4, v8, t2, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(11, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(12, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(13, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(14, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(15, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(16, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(17, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(18, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(19, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(20, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(21, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(22, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(23, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(24, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(25, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(26, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(27, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(28, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(29, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(30, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(31, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(32, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(33, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(34, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(35, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(36, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(37, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(38, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(39, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(40, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(41, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(42, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, 64
  vsetvli t1, t0, e8,m4,tu,ma
  li t2, 1
  vsaddu.vx v4, v8, t2

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(43, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(44, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(45, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(46, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(47, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(48, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(49, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(50, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a2, tdat
  vle8.v v8, (a2)
  vle8.v v4, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 64
  vsetvli t1, t0, e8,m4,ta,ma
  li t2, 1
  vsaddu.vx v4, v8, t2, v0.t

  li t0, -1
  vsetvli t1, t0, e8,m4,ta,ma
  la a1, res
  vse8.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(51, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(52, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(53, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(54, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(55, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(56, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(57, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(58, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(59, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(60, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(61, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(62, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(63, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(64, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(65, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(66, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(67, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(68, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(69, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(70, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(71, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(72, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(73, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(74, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(75, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(76, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(77, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(78, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(79, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(80, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(81, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(82, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(83, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(84, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(85, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(86, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(87, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(88, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(89, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(90, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(91, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(92, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(93, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(94, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(95, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(96, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(97, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(98, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(99, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(100, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(101, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(102, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(103, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(104, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(105, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(106, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(107, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(108, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(109, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(110, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(111, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(112, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(113, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(114, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)

  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 136

sres:
  .zero 136

tdat:
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff
  .quad 0x1070001000100
  .quad 0x103f8ffefefff

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END

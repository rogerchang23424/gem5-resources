
# See LICENSE for license details.

# This file is automatically generated. Do not edit.

#*****************************************************************************
# isa/rv64uv/vmax_vv_LMUL4SEW32VL31.S
#-----------------------------------------------------------------------------
#
# Test vmax.vv instructions.
# With LMUL=4, SEW=32, VL=31
#

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UV

RVTEST_CODE_BEGIN

  la a1, tdat
  la a3, sres
  la a2, tdat+8
  lwu a4, 0(a1)
  lwu a5, 0(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL1
  mv a5, a4
.ASL1:
  sw a5, 0(a3)
  lwu a4, 4(a1)
  lwu a5, 4(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL2
  mv a5, a4
.ASL2:
  sw a5, 4(a3)
  lwu a4, 8(a1)
  lwu a5, 8(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL3
  mv a5, a4
.ASL3:
  sw a5, 8(a3)
  lwu a4, 12(a1)
  lwu a5, 12(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL4
  mv a5, a4
.ASL4:
  sw a5, 12(a3)
  lwu a4, 16(a1)
  lwu a5, 16(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL5
  mv a5, a4
.ASL5:
  sw a5, 16(a3)
  lwu a4, 20(a1)
  lwu a5, 20(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL6
  mv a5, a4
.ASL6:
  sw a5, 20(a3)
  lwu a4, 24(a1)
  lwu a5, 24(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL7
  mv a5, a4
.ASL7:
  sw a5, 24(a3)
  lwu a4, 28(a1)
  lwu a5, 28(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL8
  mv a5, a4
.ASL8:
  sw a5, 28(a3)
  lwu a4, 32(a1)
  lwu a5, 32(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL9
  mv a5, a4
.ASL9:
  sw a5, 32(a3)
  lwu a4, 36(a1)
  lwu a5, 36(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL10
  mv a5, a4
.ASL10:
  sw a5, 36(a3)
  lwu a4, 40(a1)
  lwu a5, 40(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL11
  mv a5, a4
.ASL11:
  sw a5, 40(a3)
  lwu a4, 44(a1)
  lwu a5, 44(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL12
  mv a5, a4
.ASL12:
  sw a5, 44(a3)
  lwu a4, 48(a1)
  lwu a5, 48(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL13
  mv a5, a4
.ASL13:
  sw a5, 48(a3)
  lwu a4, 52(a1)
  lwu a5, 52(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL14
  mv a5, a4
.ASL14:
  sw a5, 52(a3)
  lwu a4, 56(a1)
  lwu a5, 56(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL15
  mv a5, a4
.ASL15:
  sw a5, 56(a3)
  lwu a4, 60(a1)
  lwu a5, 60(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL16
  mv a5, a4
.ASL16:
  sw a5, 60(a3)
  lwu a4, 64(a1)
  lwu a5, 64(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL17
  mv a5, a4
.ASL17:
  sw a5, 64(a3)
  lwu a4, 68(a1)
  lwu a5, 68(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL18
  mv a5, a4
.ASL18:
  sw a5, 68(a3)
  lwu a4, 72(a1)
  lwu a5, 72(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL19
  mv a5, a4
.ASL19:
  sw a5, 72(a3)
  lwu a4, 76(a1)
  lwu a5, 76(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL20
  mv a5, a4
.ASL20:
  sw a5, 76(a3)
  lwu a4, 80(a1)
  lwu a5, 80(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL21
  mv a5, a4
.ASL21:
  sw a5, 80(a3)
  lwu a4, 84(a1)
  lwu a5, 84(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL22
  mv a5, a4
.ASL22:
  sw a5, 84(a3)
  lwu a4, 88(a1)
  lwu a5, 88(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL23
  mv a5, a4
.ASL23:
  sw a5, 88(a3)
  lwu a4, 92(a1)
  lwu a5, 92(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL24
  mv a5, a4
.ASL24:
  sw a5, 92(a3)
  lwu a4, 96(a1)
  lwu a5, 96(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL25
  mv a5, a4
.ASL25:
  sw a5, 96(a3)
  lwu a4, 100(a1)
  lwu a5, 100(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL26
  mv a5, a4
.ASL26:
  sw a5, 100(a3)
  lwu a4, 104(a1)
  lwu a5, 104(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL27
  mv a5, a4
.ASL27:
  sw a5, 104(a3)
  lwu a4, 108(a1)
  lwu a5, 108(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL28
  mv a5, a4
.ASL28:
  sw a5, 108(a3)
  lwu a4, 112(a1)
  lwu a5, 112(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL29
  mv a5, a4
.ASL29:
  sw a5, 112(a3)
  lwu a4, 116(a1)
  lwu a5, 116(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL30
  mv a5, a4
.ASL30:
  sw a5, 116(a3)
  lwu a4, 120(a1)
  lwu a5, 120(a2)
  slli a4, a4, 32
  srai a4, a4, 32
  slli a5, a5, 32
  srai a5, a5, 32
  bgt a5, a4, .ASL31
  mv a5, a4
.ASL31:
  sw a5, 120(a3)


  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a2, tdat
  vle32.v v8, (a2)
  vle32.v v4, (a2)
  la a2, tdat+8
  vle32.v v12, (a2)

  
  li t0, 31
  vsetvli t1, t0, e32,m4,ta,ma
  vmax.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a1, res
  vse32.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(3, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(4, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(5, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(6, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(7, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(8, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(9, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(10, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(11, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(12, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(13, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(14, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(15, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(16, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(17, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a2, tdat
  vle32.v v8, (a2)
  vle32.v v4, (a2)
  la a2, tdat+8
  vle32.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 31
  vsetvli t1, t0, e32,m4,ta,ma
  vmax.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a1, res
  vse32.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(18, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(19, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(20, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(21, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(22, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(23, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(24, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(25, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(26, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(27, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(28, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(29, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(30, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(31, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(32, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(33, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(34, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(35, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(36, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(37, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(38, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(39, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(40, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(41, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(42, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(43, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(44, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(45, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(46, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(47, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(48, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(49, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(50, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(51, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(52, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(53, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(54, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(55, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(56, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(57, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(58, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(59, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(60, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(61, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(62, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(63, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(64, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(65, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(66, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(67, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(68, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(69, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(70, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(71, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(72, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(73, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(74, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(75, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(76, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(77, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  addi a1, a1, 1; addi a2, a2, 1;
  TEST_CASE_REG(78, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(79, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(80, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(81, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a2, tdat
  vle32.v v8, (a2)
  vle32.v v4, (a2)
  la a2, tdat+8
  vle32.v v12, (a2)

  
  li t0, 31
  vsetvli t1, t0, e32,m4,tu,ma
  vmax.vv v4, v8, v12

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a1, res
  vse32.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(82, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(83, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(84, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(85, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(86, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(87, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(88, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(89, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(90, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(91, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(92, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(93, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(94, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(95, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)
  TEST_CASE_REG(96, t0, t1, ld t0, 0(a1); ld t1, 0(a2); addi a1, a1, 8; addi a2, a2, 8)

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a2, tdat
  vle32.v v8, (a2)
  vle32.v v4, (a2)
  la a2, tdat+8
  vle32.v v12, (a2)

  
  li t0, -1
  vsetvli t1, t0, e8,m1,ta,ma
  la a3, mask
  vle8.v v0, (a3)

  li t0, 31
  vsetvli t1, t0, e32,m4,ta,ma
  vmax.vv v4, v8, v12, v0.t

  li t0, -1
  vsetvli t1, t0, e32,m4,ta,ma
  la a1, res
  vse32.v v4, (a1)
  la a2, sres

  TEST_CASE_REG(97, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(98, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(99, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(100, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(101, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(102, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(103, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(104, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(105, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(106, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(107, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(108, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(109, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(110, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(111, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(112, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(113, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(114, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(115, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(116, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(117, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(118, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(119, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(120, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(121, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(122, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(123, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(124, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(125, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(126, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(127, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(128, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(129, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(130, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(131, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(132, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(133, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(134, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(135, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(136, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(137, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(138, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(139, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(140, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(141, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(142, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(143, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(144, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(145, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(146, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(147, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(148, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(149, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(150, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(151, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(152, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(153, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(154, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(155, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(156, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(157, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(158, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(159, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(160, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(161, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(162, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(163, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(164, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(165, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(166, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(167, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(168, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(169, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(170, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(171, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(172, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(173, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(174, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(175, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(176, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(177, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(178, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(179, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(180, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(181, t0, 0x3, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(182, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(183, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(184, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(185, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(186, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(187, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(188, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(189, t0, 0x7, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(190, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(191, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(192, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(193, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(194, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(195, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(196, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(197, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(198, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(199, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(200, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(201, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(202, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(203, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(204, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(205, t0, 0x1, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(206, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(207, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(208, t0, 0x0, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(209, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(210, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(211, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(212, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(213, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(214, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(215, t0, 0xff, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE(216, t0, 0xef, lbu t0, 0(a1); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(217, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(218, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(219, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)
  TEST_CASE_REG(220, t0, t1, lbu t0, 0(a1); lbu t1, 0(a2); addi a1, a1, 1; addi a2, a2, 1)

  TEST_PASSFAIL

RVTEST_CODE_END

  .data
RVTEST_DATA_BEGIN

res:
  .zero 136

sres:
  .zero 136

tdat:
  .quad 0x1
  .quad 0x1
  .quad 0x3fffffff8
  .quad 0x700000000
  .quad 0xffffffffefffffff
  .quad 0x100000000
  .quad 0xefffffffffffffff
  .quad 0x100000000
  .quad 0x1
  .quad 0x1
  .quad 0x3fffffff8
  .quad 0x700000000
  .quad 0xffffffffefffffff
  .quad 0x100000000
  .quad 0xefffffffffffffff
  .quad 0x100000000
  .quad 0x1

mask:
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555
  .quad 0x5555555555555555

RVTEST_DATA_END
